Краткое руководство: Загрузка проекта на GitHub (WSL & PAT)
На GitHub: Создать новый, пустой репозиторий (без README). Скопировать его HTTPS URL.
В Ubuntu WSL:
Установка Git: sudo apt update затем sudo apt install git.
Переход в папку проекта: cd /mnt/c/.../ВашПроект/ (важно).
Настройка Git:
git config --global user.name "Ваше Имя" (можно менять: повторить команду)
git config --global user.email "ваш_email@example.com" (GitHub email)
Инициализация Git: git init
Подготовка файлов:
(Опционально: переименовать файлы командой mv старое_имя новое_имя)
git add . (для добавления/обновления всех файлов)
(Для отмены git add: git rm --cached . -r если нет коммитов, иначе git restore --staged .)
Первый коммит: git commit -m "Initial commit"
Привязка к GitHub: git remote add origin [скопированный_URL_с_GitHub]
Загрузка на GitHub: git push -u origin master
При запросе Username: ввести логин GitHub.
При запросе Password: ввести Personal Access Token (PAT).
PAT: Генерируется на GitHub (Settings -> Developer settings -> Personal access tokens (classic)), нужен scope repo. Выдается один раз, сохранять обязательно! (Сохранён в Google Keep).
Проверка: Обновить страницу репозитория на GitHub – файлы должны быть там.

====
Итак, сокращенно:

Внесли изменения (добавили/удалили/изменили файлы).
git add .
git commit -m "Опишите, что вы сделали"
git push
git status

---------------------------------------------------------------------------------------------------

# === ШАГ 1: Проверка наличия SSH-ключей (Опционально) ===
# Перейдите в директорию SSH-ключей
cd ~/.ssh/

# Посмотрите содержимое директории
ls -l

# Если файлы id_rsa и id_rsa.pub найдены, переходите к ШАГУ 3, иначе к ШАГУ 2.


# === ШАГ 2: Генерация новой пары SSH-ключей (если нужно) ===
# Генерируем ключ RSA длиной 4096 бит с вашим email в качестве комментария.
# Нажмите Enter для пути по умолчанию (~/.ssh/id_rsa).
# Рекомендуется ввести парольную фразу для безопасности.
ssh-keygen -t rsa -b 4096 -C "ваш_email@example.com"

# Запустите ssh-agent и добавьте ключ (если используете парольную фразу)
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
# Введите вашу парольную фразу, если она была установлена.


# === ШАГ 3: Добавление публичного SSH-ключа в ваш аккаунт GitHub ===
# Выведите содержимое вашего публичного ключа (id_rsa.pub)
cat ~/.ssh/id_rsa.pub
# СКОПИРУЙТЕ ВЕСЬ ВЫВОД ЭТОЙ КОМАНДЫ (от 'ssh-rsa' до вашего email).

# Теперь откройте веб-браузер, перейдите на github.com,
# войдите в свой аккаунт и выполните следующее:
# 1. Нажмите на свою фотографию профиля (аватарку) -> Settings (Настройки).
# 2. В левом боковом меню выберите SSH and GPG keys (Ключи SSH и GPG).
# 3. Нажмите кнопку New SSH key (Новый ключ SSH) или Add SSH key.
# 4. В поле Title (Заголовок) дайте ключу понятное имя (например, "My WSL RSA Key").
# 5. В поле Key (Ключ) ВСТАВЬТЕ СКОПИРОВАННЫЙ ПУБЛИЧНЫЙ КЛЮЧ.
# 6. Нажмите Add SSH key. Возможно, потребуется подтверждение паролем от GitHub.


# === ШАГ 4: Сконфигурировать Git для использования SSH в вашем репозитории ===
# Перейдите в корневую директорию вашего проекта в WSL
# ЗАМЕНИТЕ "/mnt/c/Users/ВашеИмяПользователя/Documents/МойПроект" на актуальный путь!
cd /mnt/c/Users/ВашеИмяПользователя/Documents/МойПроект

# Удалите текущий удаленный репозиторий (который использует HTTPS)
git remote remove origin

# Добавьте новый удаленный репозиторий, используя SSH URL
# ЗАМЕНИТЕ "escobarte/stisc_devops.git" на ваш актуальный логин и имя репозитория!
git remote add origin git@github.com:escobarte/stisc_devops.git

# Проверьте, что удаленный URL был успешно изменен на SSH
git remote -v


# === ШАГ 5: Проверка подключения (Опционально) ===
# Это проверит, что ваше SSH-соединение с GitHub работает
ssh -T git@github.com
# Ожидайте сообщение типа "Hi <ваш_логин>! You've successfully authenticated..."