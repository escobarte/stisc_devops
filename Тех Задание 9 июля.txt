Краткое ТЗ по пунктам
09-07-2025 3:00
1. Grafana + Prometheus
Задача:
Развернуть мониторинг на базе Prometheus и визуализацию метрик через Grafana (аналог Zabbix, но более модульный и современный стек).

Суть:
Prometheus собирает метрики с серверов, Grafana отображает их красиво в дашбордах.

2. Loki
Задача:
Посмотреть и развернуть Loki — это инструмент для сбора и просмотра логов (логирование).

Суть:
Аналогично как ELK, только проще и «роднее» для Grafana.

Особое требование:
Настроить, чтобы логи из nginx access.log летели в Loki.

3. ELK Stack (Elasticsearch, Logstash, Kibana)
Задача:
Развернуть стек ELK — это ещё одна система для сбора, хранения и визуализации логов.

Суть:
Logstash собирает логи (например, тоже с nginx), Elasticsearch хранит, Kibana рисует красивые дашборды.

Особое требование:
Настроить сбор и визуализацию логов с nginx.

4. CI/CD
Задача:
Настроить простую цепочку CI/CD (Continuous Integration / Continuous Deployment) через какой-нибудь git-репозиторий (например, GitLab или GitHub).

Суть:
При пуше в git делать автоматический деплой в Docker-контейнер (какое приложение — не принципиально, главное сам процесс).

5. Ansible
Задача:
Ознакомиться и потренироваться с Ansible — инструмент для автоматизации настройки серверов.

Суть:
Например, автоматизировать установку NGINX, Prometheus, Grafana или что-то другое через Ansible playbooks.

6. Время на выполнение
На всё про всё примерно 2 недели, можно играться и пробовать.

В целом:
Тебя просят развести у себя лабораторию из трёх основных стеков (мониторинг, логирование, автоматизация) и связать их друг с другом, автоматизировать процессы и попрактиковаться с CI/CD.



=======================================================
      Как будет выглядеть финальный результат:
=======================================================
 - Prometheus собирает метрики с серверов (CPU, RAM, диск, etc.)
 - Grafana рисует графики по этим метрикам + отдельная вкладка для логов
 - Loki собирает логи с Nginx (access.log) с 10.100.93.3 и 10.100.93.4
 - Всё настраивается так, что логи и метрики видны из одной панели Grafana
 
[NGINX 10.100.93.3] --|
[NGINX 10.100.93.4] --|--> Promtail ---> Loki
                       |      ^            ^
                       |      |            |
                       |---node_exporter---| 
                                    |   
                                Prometheus
                                    |
                                 Grafana

 - Promtail читает access.log → шлёт в Loki
 - node_exporter собирает метрики → Prometheus
 - Grafana подключается к Prometheus (метрики) и Loki (логи)