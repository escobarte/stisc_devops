1. Linux:
- disks partitions, format, create partition, create LVM (PV/VG/LV) mount point
- Creating NFS, to create Common Shared for 3  VMS
- Configuring FTP
- Local users permissions or Access rights of local users
- Configuring a LAMP server Linux / apache / mysql / php, 
	- multiplying the same application at the virtual machine level
- Configuring nginx (reverse proxy) as failover + Load balancer
	- For those 2 vms (i.e. nginx should have the role of balancing the application and also if one of the proxies dies, the traffic
should automatically switch to another and all traffic should be directly on https )
- certbot how to generate letsnecrypt certificates

2. Network
- TCP/UDP and how they works
- http / https what is and how it works and to configure it on nginx
- NAT / DNAT / SNAT 
- Iptables (something simple allowing your IP and I have a private one to be allowed for port 80 / 443)
- Routes
- How to configure an interface on linux (change ip / NS)

- About DNS How DNS works, About namespaces, All types of DNS records and what each one does


##########################################
More after this
##########################################
Then we will move on to monitoring / logging / collection / backups / scripting
1. We have a procedure for enrolling virtual machines in FREE IPA, you will enroll them and you will only connect with your user
2. you will add them in zabbix and configure
3. RSYSLOG how to collect logs and throw them on another vm
4 BACKUP how to make a script and copy some files and also throw them on an NFS something
5 to build an ELK or OpenSearch, throwing access logs in this ELK but also to be parsed nicely
6. Gitlab, to configure a runner and through this runner to configure some deployment pipeline
7. Gitlab, the same application to containerize it throw the image on the registry and
already to deploy it all on a vm
8 to try the logs from the containers to throw them in elasticsearch or opensearch
