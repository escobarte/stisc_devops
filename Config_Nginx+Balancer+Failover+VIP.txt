Nginx + Loadbalancer

sudo apt install nginx -y
sudo systemctl enable nginx
sudo systemctl start nginx
sudo systemctl status nginx

//config file, create it
sudo nano /etc/nginx/sites-available/app-lb2.conf 
#######################################################
upstream backend {
        server 10.100.93.5 max_fails=1 fail_timeout=1s;
        server 10.100.93.6 max_fails=1 fail_timeout=1s;
        server 10.100.93.7 max_fails=1 fail_timeout=1s;
}

server {
    listen 80 default_server;

    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1s;
        proxy_read_timeout 5s;
        proxy_next_upstream error timeout http_502 http_503 http_504;
 }
}
#######################################################
//activate conf file
sudo ln -s /etc/nginx/sites-available/app-lb2.conf /etc/nginx/sites-enabled/
sudo rm /etc/nginx/sites-enabled/default
sudo nginx -t

Failover через Keepalived + unicast
sudo apt install keepalived -y
ip a // find your network interface
,,,ens192
// 1st. Create scrit that will check if Nginx is up or down on both Proxy Servers
nano /etc/keepalived/check_nginx.sh
#!/bin/bash
pidof nginx > /dev/null 2>&1
if [ $? -eq 0 ]; then
    exit 0
else
    exit 1
fi
////
chmod +x /etc/keepalived/check_nginx.sh // make it executable
#############################################################################################
sudo nano /etc/keepalived/keepalived.conf
vrrp_script chk_nginx {
    script "/etc/keepalived/check_nginx.sh"
    interval 2                   # каждые 2 сек проверка
    weight -20                   # уменьшает приоритет на 20 при сбое
}

vrrp_instance VI_1 {
    state MASTER
    interface ens192
    virtual_router_id 51
    priority 100
    advert_int 1

    authentication {
        auth_type PASS
        auth_pass 123456
    }

	unicast_src_ip 10.100.93.3     # это unicast Настройка на Мастере
	
	unicast_peer {
	10.100.93.4
	}
	
    virtual_ipaddress {
        10.100.93.2
    }

    track_script {
        chk_nginx
    }
}
########################################################################
		// On Slave for me is with IP 93.4
vrrp_script chk_nginx {
    script "/etc/keepalived/check_nginx.sh"
    interval 2                   # каждые 2 сек проверка
    weight -20                   # уменьшает приоритет на 20 при сбое
}

vrrp_instance VI_1 {
    state BACKUP
    interface ens192
    virtual_router_id 51
    priority 90
    advert_int 1

    authentication {
        auth_type PASS
        auth_pass 123456
    }

    virtual_ipaddress {
        10.100.93.2
    }
	
	unicast_src_ip 10.100.93.4     # это unicast Настройка на Мастере
	
	unicast_peer {
	10.100.93.3
	}
	
    track_script {
        chk_nginx
    }
}
... On both servers:
systemctl restart keepalived
systemctl status keepalived
... How to check
//On Master
ip a | grep 10.100.93.2 
..and this is the response, at slave you will not see this ip, it will go to slave server if Master will stop working
    inet 10.100.93.4/24 brd 10.100.93.255 scope global ens192
    inet 10.100.93.2/32 scope global ens192
//If you want to see if slave is working. stop Master server and do this
ip a | grep 10.100.93.2
.. then VIP ip will appear.




